@using DominicanBanking.Core.Application.ViewModel.User
@model List<UserViewModel>
@using Microsoft.AspNetCore.Http
@using DominicanBanking.Core.Application.Helpers
@using DominicanBanking.Core.Application.DTOS.Account
@inject IHttpContextAccessor httpContextAccessor
@{
    var User = httpContextAccessor.HttpContext.Session.Get<AuthenticationResponse>("user");
}

<div class="container-fluid mt-5">
    <div class="row d-flex justify-content-center">
        <div class="col-8">
            <div class="d-flex justify-content-between ">
                <h1 class="fw-bold text-start color">&nbsp;User List</h1>
                <a class="btn btn-primary btn-rounded" asp-action="Register" asp-controller="User"><i class="fa fa-plus"></i> </a>
            </div>

        </div>
    </div>



    <div class="row d-flex justify-content-center mt-5">

        <div class="col-8">
            <table class="table table-hover table-striped border border-light rounded shadow">
                <thead class="border border-light rounded-1">
                    <tr>
                        <th scope="col">FirstName</th>
                        <th scope="col">LastName</th>
                        <th scope="col">Documents</th>
                        <th scope="col">Email | User</th>
                        <th scope="col">Status</th>
                        <th scope="col">Roles</th>
                        <th scope="col">Change Status</th>
                    </tr>
                </thead>
                <tbody>
                  @foreach (UserViewModel item in Model.Where(r=>r.Roles.Any(r=>r=="ADMINISTRATOR")&&r.IsVerified==true))
                   {
                     <tr>
                        <td>@item.FirstName</td>
                        <td>@item.LastName</td>
                        <td>@item.Documents</td>
                        <td>@item.Email | @item.UserName</td>
                        <td><span class="@(item.IsVerified?"badge bg-success":"badge bg-danger")">@(item.IsVerified?"Activate":"Deactivate")</span></td>
                        <td>@foreach(var rol in item.Roles){<span>@rol</span>}</td>
                        <td>
                       @if(item.Email != User.Email){<a asp-action="Deactivate" asp-controller="User" asp-route-id="@item.Id" class="btn btn-danger">Deactivate</a>}</td>
                    </tr>  
                   }
                    @foreach (UserViewModel item in Model.Where(r=>r.Roles.Any(r=>r=="ADMINISTRATOR")&&r.IsVerified!=true))
                   {
                     <tr>
                        <td>@item.FirstName</td>
                        <td>@item.LastName</td>
                        <td>@item.Documents</td>
                        <td>@item.Email | @item.UserName</td>
                        <td><span class="@(item.IsVerified?"badge bg-success":"badge bg-danger")">@(item.IsVerified?"Activate":"Deactivate")</span></td>
                        <td>@foreach(var rol in item.Roles){<span>@rol</span>}</td>
                        <td>@if(item.Email != User.Email){<a asp-action="Activate" asp-controller="User" asp-route-id="@item.Id" class="btn btn-success">Activate</a>}</td>
                    </tr>   
                   }
                   
                    @foreach (UserViewModel item in Model.Where(r=>r.Roles.Any(r=>r=="CLIENT")&&r.IsVerified==true))
                   {
                     <tr>
                        <td>@item.FirstName</td>
                        <td>@item.LastName</td>
                        <td>@item.Documents</td>
                        <td>@item.Email | @item.UserName</td>
                        <td><span class="@(item.IsVerified?"badge bg-success":"badge bg-danger")">@(item.IsVerified?"Activate":"Deactivate")</span></td>
                        <td>@foreach(var rol in item.Roles){<span>@rol</span>}</td>
                        <td><a asp-action="Deactivate" asp-controller="User" asp-route-id="@item.Id" class="btn btn-danger">Deactivate</a></td>
                    </tr>  
                   }

                    @foreach (UserViewModel item in Model.Where(r=>r.Roles.Any(r=>r=="CLIENT")&&r.IsVerified!=true))
                   {
                     <tr>
                        <td>@item.FirstName</td>
                        <td>@item.LastName</td>
                        <td>@item.Documents</td>
                        <td>@item.Email | @item.UserName</td>
                        <td><span class="@(item.IsVerified?"badge bg-success":"badge bg-danger")">@(item.IsVerified?"Activate":"Deactivate")</span></td>
                        <td>@foreach(var rol in @item.Roles){@rol}</td>
                        <td><a asp-action="Activate" asp-controller="User" asp-route-id="@item.Id" class="btn btn-success">Activate</a></td>
                    </tr>     
                   }
                </tbody>
            </table>
        </div>
    </div>
</div>
